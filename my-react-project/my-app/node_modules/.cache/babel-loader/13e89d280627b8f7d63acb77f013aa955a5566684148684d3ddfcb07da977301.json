{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VARZARI\\\\Documents\\\\GitHub\\\\Lab1_VarzariNicolae_CR-212\\\\my-react-project\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Layout, Menu, Card, Form, Input, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer,\n  Sider\n} = Layout;\nconst App = () => {\n  _s();\n  const [form] = Form.useForm();\n  const [cards, setCards] = useState([{\n    title: 'Contabilitate',\n    content: 'CR-212',\n    prenume: 'Varzari'\n  }, {\n    title: 'Server',\n    content: 'CR-214',\n    prenume: 'Popescu'\n  }, {\n    title: 'Bucatarie',\n    content: 'CR-201',\n    prenume: 'Ionescu'\n  }, {\n    title: 'Testare',\n    content: 'CR-215',\n    prenume: 'Georgescu'\n  }, {\n    title: 'Receptie',\n    content: 'CR-217',\n    prenume: 'Stoica'\n  }, {\n    title: 'Sef',\n    content: 'CR-211',\n    prenume: 'Popa'\n  }]);\n  const [menuItems, setMenuItems] = useState([{\n    key: '1',\n    title: 'Laboratorul 3'\n  }, {\n    key: '2',\n    title: 'Pagina 1'\n  }, {\n    key: '3',\n    title: 'Pagina 2'\n  }]);\n  const handleSubmit = values => {\n    const newCard = {\n      title: values.title,\n      content: values.content,\n      prenume: values.prenume\n    };\n    const newCards = [...cards, newCard];\n    setCards(newCards);\n    console.log('Form values:', values);\n    alert('Forma s-a adăugat cu succes!');\n  };\n  const handleMenuClick = event => {\n    console.log('Menu item clicked:', event.key);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        theme: \"dark\",\n        mode: \"horizontal\",\n        children: menuItems.map(item => /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: item.title\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Sider, {\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          mode: \"inline\",\n          onClick: handleMenuClick,\n          children: menuItems.map(item => /*#__PURE__*/_jsxDEV(Menu.Item, {\n            children: item.title\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(Content, {\n          style: {\n            padding: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            form: form,\n            onFinish: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"title\",\n              rules: [{\n                required: true,\n                message: 'Introduceți titlul'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Titlu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"content\",\n              rules: [{\n                required: true,\n                message: 'Introduceți contentul'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"prenume\",\n              rules: [{\n                required: true,\n                message: 'Introduceți prenumele'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Prenume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                children: \"Trimite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: 300,\n                margin: '20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n                title: `${card.title} - ${card.prenume}`,\n                description: card.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)\n            }, card.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          children: \"Varzari Nicolae CR-212\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Bjy/80xyaxHQBb92WgtYYudNopk=\", false, function () {\n  return [Form.useForm];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Layout","Menu","Card","Form","Input","Button","Header","Content","Footer","Sider","App","form","useForm","cards","setCards","title","content","prenume","menuItems","setMenuItems","key","handleSubmit","values","newCard","newCards","console","log","alert","handleMenuClick","event","map","item","padding","required","message","display","flexWrap","card","width","margin"],"sources":["C:/Users/VARZARI/Documents/GitHub/Lab1_VarzariNicolae_CR-212/my-react-project/my-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Layout, Menu, Card, Form, Input, Button } from 'antd';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst App = () => {\r\n    const [form] = Form.useForm();\r\n    const [cards, setCards] = useState([\r\n        {title: 'Contabilitate', content: 'CR-212', prenume: 'Varzari'},\r\n        {title: 'Server', content: 'CR-214', prenume: 'Popescu'},\r\n        {title: 'Bucatarie', content: 'CR-201', prenume: 'Ionescu'},\r\n        {title: 'Testare', content: 'CR-215', prenume: 'Georgescu'},\r\n        {title: 'Receptie', content: 'CR-217', prenume: 'Stoica'},\r\n        {title: 'Sef', content: 'CR-211', prenume: 'Popa'},\r\n    ]);\r\n\r\n    const [menuItems, setMenuItems] = useState([\r\n        {key: '1', title: 'Laboratorul 3'},\r\n        {key: '2', title: 'Pagina 1'},\r\n        {key: '3', title: 'Pagina 2'},\r\n    ]);\r\n\r\n    const handleSubmit = (values: { title: string; content: string; prenume: string }) => {\r\n        const newCard = {title: values.title, content: values.content, prenume: values.prenume};\r\n        const newCards = [...cards, newCard];\r\n        setCards(newCards);\r\n        console.log('Form values:', values);\r\n        alert('Forma s-a adăugat cu succes!');\r\n    };\r\n\r\n    const handleMenuClick = (event: any) => {\r\n        console.log('Menu item clicked:', event.key);\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <Header>\r\n                <Menu theme=\"dark\" mode=\"horizontal\">\r\n                    {menuItems.map(item => (\r\n                        <Menu.Item key={item.key}>{item.title}</Menu.Item>\r\n                    ))}\r\n                </Menu>\r\n            </Header>\r\n            <Layout>\r\n                <Sider>\r\n                    <Menu mode=\"inline\" onClick={handleMenuClick}>\r\n                        {menuItems.map(item => (\r\n                            <Menu.Item key={item.key}>{item.title}</Menu.Item>\r\n                        ))}\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Content style={{padding: '50px'}}>\r\n                        <Form form={form} onFinish={handleSubmit}>\r\n                            <Form.Item\r\n                                name=\"title\"\r\n                                rules={[{required: true, message: 'Introduceți titlul'}]}\r\n                            >\r\n                                <Input placeholder=\"Titlu\"/>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"content\"\r\n                                rules={[{required: true, message: 'Introduceți contentul'}]}\r\n                            >\r\n                                <Input placeholder=\"Content\"/>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"prenume\"\r\n                                rules={[{required: true, message: 'Introduceți prenumele'}]}\r\n                            >\r\n                                <Input placeholder=\"Prenume\"/>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Trimite\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                        <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                            {cards.map(card => (\r\n                                <Card key={card.title} style={{width: 300, margin: '20px'}}>\r\n                                    <Card.Meta title={`${card.title} - ${card.prenume}`} description={card.content}/>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    </Content>\r\n                    <Footer>Varzari Nicolae CR-212</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAAC;AAE/D,MAAM;EAAEC,MAAM;EAAEC,OAAO;EAAEC,MAAM;EAAEC;AAAM,CAAC,GAAGT,MAAM;AAEjD,MAAMU,GAAG,GAAG,MAAM;EAAA;EACd,MAAM,CAACC,IAAI,CAAC,GAAGR,IAAI,CAACS,OAAO,EAAE;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAC/B;IAACgB,KAAK,EAAE,eAAe;IAAEC,OAAO,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAS,CAAC,EAC/D;IAACF,KAAK,EAAE,QAAQ;IAAEC,OAAO,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAS,CAAC,EACxD;IAACF,KAAK,EAAE,WAAW;IAAEC,OAAO,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAS,CAAC,EAC3D;IAACF,KAAK,EAAE,SAAS;IAAEC,OAAO,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAW,CAAC,EAC3D;IAACF,KAAK,EAAE,UAAU;IAAEC,OAAO,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAQ,CAAC,EACzD;IAACF,KAAK,EAAE,KAAK;IAAEC,OAAO,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAM,CAAC,CACrD,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,CACvC;IAACqB,GAAG,EAAE,GAAG;IAAEL,KAAK,EAAE;EAAe,CAAC,EAClC;IAACK,GAAG,EAAE,GAAG;IAAEL,KAAK,EAAE;EAAU,CAAC,EAC7B;IAACK,GAAG,EAAE,GAAG;IAAEL,KAAK,EAAE;EAAU,CAAC,CAChC,CAAC;EAEF,MAAMM,YAAY,GAAIC,MAA2D,IAAK;IAClF,MAAMC,OAAO,GAAG;MAACR,KAAK,EAAEO,MAAM,CAACP,KAAK;MAAEC,OAAO,EAAEM,MAAM,CAACN,OAAO;MAAEC,OAAO,EAAEK,MAAM,CAACL;IAAO,CAAC;IACvF,MAAMO,QAAQ,GAAG,CAAC,GAAGX,KAAK,EAAEU,OAAO,CAAC;IACpCT,QAAQ,CAACU,QAAQ,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,MAAM,CAAC;IACnCK,KAAK,CAAC,8BAA8B,CAAC;EACzC,CAAC;EAED,MAAMC,eAAe,GAAIC,KAAU,IAAK;IACpCJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEG,KAAK,CAACT,GAAG,CAAC;EAChD,CAAC;EAED,oBACI,QAAC,MAAM;IAAA,wBACH,QAAC,MAAM;MAAA,uBACH,QAAC,IAAI;QAAC,KAAK,EAAC,MAAM;QAAC,IAAI,EAAC,YAAY;QAAA,UAC/BF,SAAS,CAACY,GAAG,CAACC,IAAI,iBACf,QAAC,IAAI,CAAC,IAAI;UAAA,UAAiBA,IAAI,CAAChB;QAAK,GAArBgB,IAAI,CAACX,GAAG;UAAA;UAAA;UAAA;QAAA,QAC3B;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACF,eACT,QAAC,MAAM;MAAA,wBACH,QAAC,KAAK;QAAA,uBACF,QAAC,IAAI;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAEQ,eAAgB;UAAA,UACxCV,SAAS,CAACY,GAAG,CAACC,IAAI,iBACf,QAAC,IAAI,CAAC,IAAI;YAAA,UAAiBA,IAAI,CAAChB;UAAK,GAArBgB,IAAI,CAACX,GAAG;YAAA;YAAA;YAAA;UAAA,QAC3B;QAAC;UAAA;UAAA;UAAA;QAAA;MACC;QAAA;QAAA;QAAA;MAAA,QACH,eACR,QAAC,MAAM;QAAA,wBACH,QAAC,OAAO;UAAC,KAAK,EAAE;YAACY,OAAO,EAAE;UAAM,CAAE;UAAA,wBAC9B,QAAC,IAAI;YAAC,IAAI,EAAErB,IAAK;YAAC,QAAQ,EAAEU,YAAa;YAAA,wBACrC,QAAC,IAAI,CAAC,IAAI;cACN,IAAI,EAAC,OAAO;cACZ,KAAK,EAAE,CAAC;gBAACY,QAAQ,EAAE,IAAI;gBAAEC,OAAO,EAAE;cAAoB,CAAC,CAAE;cAAA,uBAEzD,QAAC,KAAK;gBAAC,WAAW,EAAC;cAAO;gBAAA;gBAAA;gBAAA;cAAA;YAAE;cAAA;cAAA;cAAA;YAAA,QACpB,eACZ,QAAC,IAAI,CAAC,IAAI;cACN,IAAI,EAAC,SAAS;cACd,KAAK,EAAE,CAAC;gBAACD,QAAQ,EAAE,IAAI;gBAAEC,OAAO,EAAE;cAAuB,CAAC,CAAE;cAAA,uBAE5D,QAAC,KAAK;gBAAC,WAAW,EAAC;cAAS;gBAAA;gBAAA;gBAAA;cAAA;YAAE;cAAA;cAAA;cAAA;YAAA,QACtB,eACZ,QAAC,IAAI,CAAC,IAAI;cACN,IAAI,EAAC,SAAS;cACd,KAAK,EAAE,CAAC;gBAACD,QAAQ,EAAE,IAAI;gBAAEC,OAAO,EAAE;cAAuB,CAAC,CAAE;cAAA,uBAE5D,QAAC,KAAK;gBAAC,WAAW,EAAC;cAAS;gBAAA;gBAAA;gBAAA;cAAA;YAAE;cAAA;cAAA;cAAA;YAAA,QACtB,eACZ,QAAC,IAAI,CAAC,IAAI;cAAA,uBACN,QAAC,MAAM;gBAAC,IAAI,EAAC,SAAS;gBAAC,QAAQ,EAAC,QAAQ;gBAAA,UAAC;cAEzC;gBAAA;gBAAA;gBAAA;cAAA;YAAS;cAAA;cAAA;cAAA;YAAA,QACD;UAAA;YAAA;YAAA;YAAA;UAAA,QACT,eACP;YAAK,KAAK,EAAE;cAACC,OAAO,EAAE,MAAM;cAAEC,QAAQ,EAAE;YAAM,CAAE;YAAA,UAC3CvB,KAAK,CAACiB,GAAG,CAACO,IAAI,iBACX,QAAC,IAAI;cAAkB,KAAK,EAAE;gBAACC,KAAK,EAAE,GAAG;gBAAEC,MAAM,EAAE;cAAM,CAAE;cAAA,uBACvD,QAAC,IAAI,CAAC,IAAI;gBAAC,KAAK,EAAG,GAAEF,IAAI,CAACtB,KAAM,MAAKsB,IAAI,CAACpB,OAAQ,EAAE;gBAAC,WAAW,EAAEoB,IAAI,CAACrB;cAAQ;gBAAA;gBAAA;gBAAA;cAAA;YAAE,GAD1EqB,IAAI,CAACtB,KAAK;cAAA;cAAA;cAAA;YAAA,QAGxB;UAAC;YAAA;YAAA;YAAA;UAAA,QACA;QAAA;UAAA;UAAA;UAAA;QAAA,QACA,eACV,QAAC,MAAM;UAAA,UAAC;QAAsB;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAClC;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEjB,CAAC;AAAA,GAtFKL,GAAG;EAAA,QACUP,IAAI,CAACS,OAAO;AAAA;AAAA,KADzBF,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}